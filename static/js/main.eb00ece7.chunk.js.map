{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/getUserById.tsx","components/PostForm/PostForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","classNames","completed","id","title","TodoList","todos","map","listCh","username","getUserById","userId","usersFromServer","find","PostForm","onSubmit","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","caunt","setCaunt","action","method","event","preventDefault","findLetter","split","some","element","curr","htmlFor","type","value","placeholder","onChange","target","disabled","i","getNewPostId","posts","Math","max","post","App","setPost","newPost","currentPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb00ece7.chunk.js","sourcesContent":["import { User } from '../../types/UserType';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/TodosProps';\n\ntype TodoInfoProps = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  return (\n    <article\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n      data-id={todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {todo.user && (\n        <UserInfo\n          user={todo.user}\n        />\n      )}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/TodosProps';\n\ntype TodosProps = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<TodosProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(listCh => (\n        <TodoInfo\n          todo={listCh}\n          key={listCh.id}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n","import React, { useState } from 'react';\nimport { Todo } from '../../types/TodosProps';\nimport { getUserById } from '../../services/getUserById';\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  onSubmit: (post: Todo) => void\n};\n\nexport const PostForm: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const [caunt, setCaunt] = useState(0);\n\n  const handleTitleChang = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChang = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleSumbit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const findLetter = title.split('').some(element => element !== ' ');\n\n    setHasTitleError(!findLetter);\n    setHasUserIdError(userId === 0);\n\n    if (!userId || !findLetter) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      userId,\n      completed: false,\n      user: getUserById(userId),\n    });\n\n    setTitle('');\n    setUserId(0);\n    setCaunt(curr => curr + 1);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSumbit}\n      key={caunt}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"title\">Title: </label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          value={title}\n          placeholder=\"Enter a title\"\n          onChange={handleTitleChang}\n          data-cy=\"titleInput\"\n        />\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"userSelect\">User: </label>\n        <select\n          id=\"userSelect\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserIdChang}\n          key={userId}\n        >\n          <option\n            value=\"0\"\n            disabled\n          >\n            Choose a user\n          </option>\n          {usersFromServer.map((user, i) => (\n            <option\n              key={user.id}\n              value={i + 1}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/TodosProps';\nimport { PostForm } from './components/PostForm/PostForm';\nimport { getUserById } from './services/getUserById';\nimport todosFromServer from './api/todos';\n\nfunction getNewPostId(posts: Todo[]) {\n  const maxId = Math.max(...posts.map(post => post.id));\n\n  return maxId + 1;\n}\n\nexport const todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [post, setPost] = useState<Todo[]>(todos);\n\n  const addPost = (posts: Todo) => {\n    const newPost = {\n      ...posts,\n      id: getNewPostId(post),\n    };\n\n    setPost(currentPost => [...currentPost, newPost]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <PostForm\n        onSubmit={addPost}\n      />\n\n      <TodoList\n        todos={post}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}